{"ast":null,"code":"import _regeneratorRuntime from \"/home/aatu/programming/authors/library-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aatu/programming/authors/library-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/aatu/programming/authors/library-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/aatu/programming/authors/library-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/aatu/programming/authors/library-frontend/src/components/NewBook.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nmutation createBook($title: String!, author: String!, published: Int!, genres: [String!]!) {\\n  addBook(\\n    title: $title,\\n    author: $author,\\n    published: $published,\\n    genres: $genres\\n  ) {\\n    title\\n    author\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nvar CREATE_BOOK = gql(_templateObject());\n\nvar NewBook = function NewBook(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      author = _useState4[0],\n      setAuhtor = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      published = _useState6[0],\n      setPublished = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      genre = _useState8[0],\n      setGenre = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      genres = _useState10[0],\n      setGenres = _useState10[1];\n\n  if (!props.show) {\n    return null;\n  }\n\n  var submit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              console.log(\"add book...\");\n              setTitle(\"\");\n              setPublished(\"\");\n              setAuhtor(\"\");\n              setGenres([]);\n              setGenre(\"\");\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function submit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var addGenre = function addGenre() {\n    setGenres(genres.concat(genre));\n    setGenre(\"\");\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Mutation, {\n    mutation: CREATE_BOOK,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, function (addBook, _ref2) {\n    var data = _ref2.data;\n    ;\n    React.createElement(\"form\", {\n      onSubmit: submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"title\", React.createElement(\"input\", {\n      value: title,\n      onChange: function onChange(_ref3) {\n        var target = _ref3.target;\n        return setTitle(target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"author\", React.createElement(\"input\", {\n      value: author,\n      onChange: function onChange(_ref4) {\n        var target = _ref4.target;\n        return setAuhtor(target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"published\", React.createElement(\"input\", {\n      type: \"number\",\n      value: published,\n      onChange: function onChange(_ref5) {\n        var target = _ref5.target;\n        return setPublished(target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: genre,\n      onChange: function onChange(_ref6) {\n        var target = _ref6.target;\n        return setGenre(target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: addGenre,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"add genre\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"genres: \", genres.join(\" \")), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"create book\"));\n  }));\n};\n\nexport default NewBook;","map":{"version":3,"sources":["/home/aatu/programming/authors/library-frontend/src/components/NewBook.js"],"names":["React","useState","Mutation","gql","CREATE_BOOK","NewBook","props","title","setTitle","author","setAuhtor","published","setPublished","genre","setGenre","genres","setGenres","show","submit","e","preventDefault","console","log","addGenre","concat","addBook","data","target","value","join"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { Mutation } from \"react-apollo\"\nimport { gql } from \"apollo-boost\"\n\nconst CREATE_BOOK = gql`\nmutation createBook($title: String!, author: String!, published: Int!, genres: [String!]!) {\n  addBook(\n    title: $title,\n    author: $author,\n    published: $published,\n    genres: $genres\n  ) {\n    title\n    author\n  }\n}\n`\n\nconst NewBook = props => {\n  const [title, setTitle] = useState(\"\")\n  const [author, setAuhtor] = useState(\"\")\n  const [published, setPublished] = useState(\"\")\n  const [genre, setGenre] = useState(\"\")\n  const [genres, setGenres] = useState([])\n\n  if (!props.show) {\n    return null\n  }\n\n  const submit = async e => {\n    e.preventDefault()\n\n    console.log(\"add book...\")\n\n    setTitle(\"\")\n    setPublished(\"\")\n    setAuhtor(\"\")\n    setGenres([])\n    setGenre(\"\")\n  }\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre))\n    setGenre(\"\")\n  }\n\n  return (\n    <div>\n      <Mutation mutation={CREATE_BOOK}>\n        {(addBook, { data }) => {\n          ;<form onSubmit={submit}>\n            <div>\n              title\n              <input\n                value={title}\n                onChange={({ target }) => setTitle(target.value)}\n              />\n            </div>\n            <div>\n              author\n              <input\n                value={author}\n                onChange={({ target }) => setAuhtor(target.value)}\n              />\n            </div>\n            <div>\n              published\n              <input\n                type=\"number\"\n                value={published}\n                onChange={({ target }) => setPublished(target.value)}\n              />\n            </div>\n            <div>\n              <input\n                value={genre}\n                onChange={({ target }) => setGenre(target.value)}\n              />\n              <button onClick={addGenre} type=\"button\">\n                add genre\n              </button>\n            </div>\n            <div>genres: {genres.join(\" \")}</div>\n            <button type=\"submit\">create book</button>\n          </form>\n        }}\n      </Mutation>\n    </div>\n  )\n}\n\nexport default NewBook\n"]},"metadata":{},"sourceType":"module"}