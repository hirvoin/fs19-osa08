{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/aatu/programming/authors/library-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/aatu/programming/authors/library-frontend/src/components/Authors.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation editAuthor($name: String!, $setBornTo: Int!) {\\n    editAuthor(name: $name, setBornTo: $setBornTo) {\\n      name\\n      born\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    allAuthors {\\n      name\\n      born\\n      bookCount\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport EditAuthor from \"./EditAuthor\";\nvar ALL_AUTHORS = gql(_templateObject());\nvar EDIT_AUTHOR = gql(_templateObject2());\n\nvar Authors = function Authors(props) {\n  if (!props.show) {\n    return null;\n  }\n\n  var _ref = [],\n      authors = _ref[0],\n      setAuthors = _ref[1];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Authors\"), React.createElement(Query, {\n    query: ALL_AUTHORS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, function (result) {\n    if (result.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Born\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Books\")), result.data.allAuthors.map(function (a) {\n      return React.createElement(\"tr\", {\n        key: a.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, a.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, a.born), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, a.bookCount));\n    }))), React.createElement(Mutation, {\n      mutation: EDIT_AUTHOR,\n      refetchQueries: [{\n        query: ALL_AUTHORS\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, function (editAuthor) {\n      return React.createElement(EditAuthor, {\n        editAuthor: editAuthor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    }));\n  }));\n};\n\nexport default Authors;","map":{"version":3,"sources":["/home/aatu/programming/authors/library-frontend/src/components/Authors.js"],"names":["React","useState","Query","Mutation","gql","EditAuthor","ALL_AUTHORS","EDIT_AUTHOR","Authors","props","show","authors","setAuthors","result","loading","data","allAuthors","map","a","name","born","bookCount","query","editAuthor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,IAAMC,WAAW,GAAGF,GAAH,mBAAjB;AAUA,IAAMG,WAAW,GAAGH,GAAH,oBAAjB;;AASA,IAAMI,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AACvB,MAAI,CAACA,KAAK,CAACC,IAAX,EAAiB;AACf,WAAO,IAAP;AACD;;AAHsB,aAIO,EAJP;AAAA,MAIhBC,OAJgB;AAAA,MAIPC,UAJO;AAMvB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEN,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAAAO,MAAM,EAAI;AACT,QAAIA,MAAM,CAACC,OAAX,EAAoB;AAClB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF,EAMGD,MAAM,CAACE,IAAP,CAAYC,UAAZ,CAAuBC,GAAvB,CAA2B,UAAAC,CAAC;AAAA,aAC3B;AAAI,QAAA,GAAG,EAAEA,CAAC,CAACC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,CAAC,CAACC,IAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,CAAC,CAACE,IAAP,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,CAAC,CAACG,SAAP,CAHF,CAD2B;AAAA,KAA5B,CANH,CADF,CADF,EAiBE,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAEd,WADZ;AAEE,MAAA,cAAc,EAAE,CAAC;AAAEe,QAAAA,KAAK,EAAEhB;AAAT,OAAD,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,UAAAiB,UAAU;AAAA,aAAI,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAEA,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ;AAAA,KAJb,CAjBF,CADF;AA0BD,GAhCH,CAFF,CADF;AAuCD,CA7CD;;AA+CA,eAAef,OAAf","sourcesContent":["import React, { useState } from \"react\"\nimport { Query, Mutation } from \"react-apollo\"\nimport { gql } from \"apollo-boost\"\nimport EditAuthor from \"./EditAuthor\"\n\nconst ALL_AUTHORS = gql`\n  {\n    allAuthors {\n      name\n      born\n      bookCount\n    }\n  }\n`\n\nconst EDIT_AUTHOR = gql`\n  mutation editAuthor($name: String!, $setBornTo: Int!) {\n    editAuthor(name: $name, setBornTo: $setBornTo) {\n      name\n      born\n    }\n  }\n`\n\nconst Authors = props => {\n  if (!props.show) {\n    return null\n  }\n  const [authors, setAuthors] = []\n\n  return (\n    <div>\n      <h2>Authors</h2>\n      <Query query={ALL_AUTHORS}>\n        {result => {\n          if (result.loading) {\n            return <div>loading...</div>\n          }\n\n          return (\n            <div>\n              <table>\n                <tbody>\n                  <tr>\n                    <th />\n                    <th>Born</th>\n                    <th>Books</th>\n                  </tr>\n                  {result.data.allAuthors.map(a => (\n                    <tr key={a.name}>\n                      <td>{a.name}</td>\n                      <td>{a.born}</td>\n                      <td>{a.bookCount}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <Mutation\n                mutation={EDIT_AUTHOR}\n                refetchQueries={[{ query: ALL_AUTHORS }]}\n              >\n                {editAuthor => <EditAuthor editAuthor={editAuthor} />}\n              </Mutation>\n            </div>\n          )\n        }}\n      </Query>\n    </div>\n  )\n}\n\nexport default Authors\n"]},"metadata":{},"sourceType":"module"}