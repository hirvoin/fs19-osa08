{"ast":null,"code":"import _objectSpread from \"/home/aatu/programming/authors/library-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/aatu/programming/authors/library-frontend/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { setContext } from \"apollo-link-context\";\nvar httpLink = createHttpLink({\n  uri: \"http://localhost:4000/graphql\"\n});\nvar authLink = setContext(function (_, _ref) {\n  var headers = _ref.headers;\n  var token = localStorage.getItem(\"phonenumbers-user-token\");\n  return {\n    headers: _objectSpread({}, headers, {\n      authorization: token ? \"bearer \".concat(token) : null\n    })\n  };\n});\nvar client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nReactDOM.render(React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n})), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/aatu/programming/authors/library-frontend/src/index.js"],"names":["React","ReactDOM","App","ApolloProvider","ApolloClient","createHttpLink","InMemoryCache","setContext","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,IAAMC,QAAQ,GAAGH,cAAc,CAAC;AAC9BI,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,IAAMC,QAAQ,GAAGH,UAAU,CAAC,UAACI,CAAD,QAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC9C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,yBAArB,CAAd;AACA,SAAO;AACLH,IAAAA,OAAO,oBACFA,OADE;AAELI,MAAAA,aAAa,EAAEH,KAAK,oBAAaA,KAAb,IAAuB;AAFtC;AADF,GAAP;AAMD,CAR0B,CAA3B;AAUA,IAAMI,MAAM,GAAG,IAAIb,YAAJ,CAAiB;AAC9Bc,EAAAA,IAAI,EAAER,QAAQ,CAACS,MAAT,CAAgBX,QAAhB,CADwB;AAE9BY,EAAAA,KAAK,EAAE,IAAId,aAAJ;AAFuB,CAAjB,CAAf;AAKAL,QAAQ,CAACoB,MAAT,CACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEJ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport { ApolloProvider } from \"react-apollo\"\nimport { ApolloClient } from \"apollo-client\"\nimport { createHttpLink } from \"apollo-link-http\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\nimport { setContext } from \"apollo-link-context\"\n\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:4000/graphql\"\n})\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"phonenumbers-user-token\")\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : null\n    }\n  }\n})\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n)\n"]},"metadata":{},"sourceType":"module"}