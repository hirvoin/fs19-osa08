{"ast":null,"code":"import _slicedToArray from \"/home/aatu/programming/authors/library-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/aatu/programming/authors/library-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/aatu/programming/authors/library-frontend/src/App.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    allAuthors {\\n      name\\n      born\\n      bookCount\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation login($username: String!, $password: String!) {\\n    login(username: $username, password: $password) {\\n      value\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation addBook(\\n    $title: String!\\n    $published: Int!\\n    $author: String!\\n    $genres: [String!]!\\n  ) {\\n    addBook(\\n      title: $title\\n      author: $author\\n      published: $published\\n      genres: $genres\\n    ) {\\n      title\\n      published\\n      author {\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport Authors from \"./components/Authors\";\nimport Books from \"./components/Books\";\nimport NewBook from \"./components/NewBook\";\nimport Login from \"./components/Login\";\nimport { gql } from \"apollo-boost\";\nimport { Mutation } from \"react-apollo\";\nvar CREATE_BOOK = gql(_templateObject());\nvar LOGIN = gql(_templateObject2());\nvar ALL_AUTHORS = gql(_templateObject3());\n\nvar App = function App() {\n  var _useState = useState(\"authors\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      token = _useState4[0],\n      _setToken = _useState4[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setPage(\"authors\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"authors\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setPage(\"books\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"books\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setPage(\"add\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"add book\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setPage(\"login\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"sign in\")), React.createElement(Authors, {\n    show: page === \"authors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Books, {\n    show: page === \"books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Mutation, {\n    mutation: LOGIN,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, function (login) {\n    return React.createElement(Login, {\n      show: page === \"login\",\n      login: login,\n      setToken: function setToken(token) {\n        return _setToken(token);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }), React.createElement(Mutation, {\n    mutation: CREATE_BOOK,\n    refetchQueries: [{\n      query: ALL_AUTHORS\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, function (addBook) {\n    return React.createElement(NewBook, {\n      show: page === \"add\",\n      addBook: addBook,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/aatu/programming/authors/library-frontend/src/App.js"],"names":["React","useState","Authors","Books","NewBook","Login","gql","Mutation","CREATE_BOOK","LOGIN","ALL_AUTHORS","App","page","setPage","token","setToken","login","query","addBook"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,IAAMC,WAAW,GAAGF,GAAH,mBAAjB;AAsBA,IAAMG,KAAK,GAAGH,GAAH,oBAAX;AAQA,IAAMI,WAAW,GAAGJ,GAAH,oBAAjB;;AAUA,IAAMK,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBACQV,QAAQ,CAAC,SAAD,CADhB;AAAA;AAAA,MACTW,IADS;AAAA,MACHC,OADG;;AAAA,mBAEUZ,QAAQ,CAAC,IAAD,CAFlB;AAAA;AAAA,MAETa,KAFS;AAAA,MAEFC,SAFE;;AAIhB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMF,OAAO,CAAC,SAAD,CAAb;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMA,OAAO,CAAC,OAAD,CAAb;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMA,OAAO,CAAC,KAAD,CAAb;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMA,OAAO,CAAC,OAAD,CAAb;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CADF,EAQE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAED,IAAI,KAAK,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEA,IAAI,KAAK,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAWE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEH,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAAAO,KAAK;AAAA,WACJ,oBAAC,KAAD;AACE,MAAA,IAAI,EAAEJ,IAAI,KAAK,OADjB;AAEE,MAAA,KAAK,EAAEI,KAFT;AAGE,MAAA,QAAQ,EAAE,kBAAAF,KAAK;AAAA,eAAIC,SAAQ,CAACD,KAAD,CAAZ;AAAA,OAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI;AAAA,GADR,CAXF,EAqBE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAEN,WADZ;AAEE,IAAA,cAAc,EAAE,CAAC;AAAES,MAAAA,KAAK,EAAEP;AAAT,KAAD,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG,UAAAQ,OAAO;AAAA,WAAI,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAEN,IAAI,KAAK,KAAxB;AAA+B,MAAA,OAAO,EAAEM,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ;AAAA,GAJV,CArBF,CADF;AA8BD,CAlCD;;AAoCA,eAAeP,GAAf","sourcesContent":["import React, { useState } from \"react\"\nimport Authors from \"./components/Authors\"\nimport Books from \"./components/Books\"\nimport NewBook from \"./components/NewBook\"\nimport Login from \"./components/Login\"\nimport { gql } from \"apollo-boost\"\nimport { Mutation } from \"react-apollo\"\n\nconst CREATE_BOOK = gql`\n  mutation addBook(\n    $title: String!\n    $published: Int!\n    $author: String!\n    $genres: [String!]!\n  ) {\n    addBook(\n      title: $title\n      author: $author\n      published: $published\n      genres: $genres\n    ) {\n      title\n      published\n      author {\n        name\n      }\n    }\n  }\n`\n\nconst LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      value\n    }\n  }\n`\n\nconst ALL_AUTHORS = gql`\n  {\n    allAuthors {\n      name\n      born\n      bookCount\n    }\n  }\n`\n\nconst App = () => {\n  const [page, setPage] = useState(\"authors\")\n  const [token, setToken] = useState(null)\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => setPage(\"authors\")}>authors</button>\n        <button onClick={() => setPage(\"books\")}>books</button>\n        <button onClick={() => setPage(\"add\")}>add book</button>\n        <button onClick={() => setPage(\"login\")}>sign in</button>\n      </div>\n\n      <Authors show={page === \"authors\"} />\n      <Books show={page === \"books\"} />\n\n      <Mutation mutation={LOGIN}>\n        {login => (\n          <Login\n            show={page === \"login\"}\n            login={login}\n            setToken={token => setToken(token)}\n          />\n        )}\n      </Mutation>\n\n      <Mutation\n        mutation={CREATE_BOOK}\n        refetchQueries={[{ query: ALL_AUTHORS }]}\n      >\n        {addBook => <NewBook show={page === \"add\"} addBook={addBook} />}\n      </Mutation>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}