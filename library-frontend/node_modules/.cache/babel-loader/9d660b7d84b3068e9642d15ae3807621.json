{"ast":null,"code":"import _objectSpread from \"/home/aatu/programming/authors/library-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/aatu/programming/authors/library-frontend/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { setContext } from \"apollo-link-context\";\nimport { split } from \"apollo-link\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { getMainDefinition } from \"apollo-utilities\";\nvar wsLink = new WebSocketLink({\n  uri: \"ws://localhost:4000/graphql\",\n  options: {\n    reconnect: true\n  }\n});\nvar httpLink = createHttpLink({\n  uri: \"http://localhost:4000/graphql\"\n});\nvar authLink = setContext(function (_, _ref) {\n  var headers = _ref.headers;\n  var token = localStorage.getItem(\"phonenumbers-user-token\");\n  return {\n    headers: _objectSpread({}, headers, {\n      authorization: token ? \"bearer \".concat(token) : null\n    })\n  };\n});\nvar link = split(function (_ref2) {\n  var query = _ref2.query;\n\n  var _getMainDefinition = getMainDefinition(query),\n      kind = _getMainDefinition.kind,\n      operation = _getMainDefinition.operation;\n\n  return kind === \"OperationDefinition\" && operation === \"subscription\";\n}, wsLink, authLink.concat(httpLink));\nvar client = new ApolloClient({\n  link: link,\n  cache: new InMemoryCache()\n});\nReactDOM.render(React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n})), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/aatu/programming/authors/library-frontend/src/index.js"],"names":["React","ReactDOM","App","ApolloProvider","ApolloClient","createHttpLink","InMemoryCache","setContext","split","WebSocketLink","getMainDefinition","wsLink","uri","options","reconnect","httpLink","authLink","_","headers","token","localStorage","getItem","authorization","link","query","kind","operation","concat","client","cache","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,SAASC,cAAT,QAA+B,cAA/B;AAEA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AAEA,IAAMC,MAAM,GAAG,IAAIF,aAAJ,CAAkB;AAC/BG,EAAAA,GAAG,+BAD4B;AAE/BC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,SAAS,EAAE;AAAb;AAFsB,CAAlB,CAAf;AAKA,IAAMC,QAAQ,GAAGV,cAAc,CAAC;AAC9BO,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,IAAMI,QAAQ,GAAGT,UAAU,CAAC,UAACU,CAAD,QAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC9C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,yBAArB,CAAd;AACA,SAAO;AACLH,IAAAA,OAAO,oBACFA,OADE;AAELI,MAAAA,aAAa,EAAEH,KAAK,oBAAaA,KAAb,IAAuB;AAFtC;AADF,GAAP;AAMD,CAR0B,CAA3B;AAUA,IAAMI,IAAI,GAAGf,KAAK,CAChB,iBAAe;AAAA,MAAZgB,KAAY,SAAZA,KAAY;;AAAA,2BACed,iBAAiB,CAACc,KAAD,CADhC;AAAA,MACLC,IADK,sBACLA,IADK;AAAA,MACCC,SADD,sBACCA,SADD;;AAEb,SAAOD,IAAI,KAAK,qBAAT,IAAkCC,SAAS,KAAK,cAAvD;AACD,CAJe,EAKhBf,MALgB,EAMhBK,QAAQ,CAACW,MAAT,CAAgBZ,QAAhB,CANgB,CAAlB;AASA,IAAMa,MAAM,GAAG,IAAIxB,YAAJ,CAAiB;AAC9BmB,EAAAA,IAAI,EAAJA,IAD8B;AAE9BM,EAAAA,KAAK,EAAE,IAAIvB,aAAJ;AAFuB,CAAjB,CAAf;AAKAL,QAAQ,CAAC6B,MAAT,CACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEF,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nimport { ApolloProvider } from \"react-apollo\"\n\nimport { ApolloClient } from \"apollo-client\"\nimport { createHttpLink } from \"apollo-link-http\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\nimport { setContext } from \"apollo-link-context\"\n\nimport { split } from \"apollo-link\"\nimport { WebSocketLink } from \"apollo-link-ws\"\nimport { getMainDefinition } from \"apollo-utilities\"\n\nconst wsLink = new WebSocketLink({\n  uri: `ws://localhost:4000/graphql`,\n  options: { reconnect: true }\n})\n\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:4000/graphql\"\n})\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"phonenumbers-user-token\")\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : null\n    }\n  }\n})\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query)\n    return kind === \"OperationDefinition\" && operation === \"subscription\"\n  },\n  wsLink,\n  authLink.concat(httpLink)\n)\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n)\n"]},"metadata":{},"sourceType":"module"}