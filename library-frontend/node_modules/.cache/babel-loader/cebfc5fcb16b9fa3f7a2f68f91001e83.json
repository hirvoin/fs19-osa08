{"ast":null,"code":"import _slicedToArray from \"/home/aatu/programming/authors/library-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/aatu/programming/authors/library-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/aatu/programming/authors/library-frontend/src/components/Books.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    me {\\n      username\\n      favoriteGenre\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    allBooks {\\n      title\\n      published\\n      genres\\n      author {\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nvar ALL_BOOKS = gql(_templateObject());\nvar ME = gql(_templateObject2());\n\nvar Books = function Books(props) {\n  var _useState = useState(\"all\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      genreToShow = _useState2[0],\n      setGenreToShow = _useState2[1];\n\n  var disctinctGenres = [];\n  var booksToShow = [];\n\n  if (!props.show) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Books\"), React.createElement(Query, {\n    query: ME,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Query, {\n    query: ALL_BOOKS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, function (result) {\n    if (result.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, console.log(\"genrestoshow\", genreToShow), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, result.data.allBooks.forEach(function (book) {\n      book.genres.forEach(function (genre) {\n        if (!disctinctGenres.includes(genre)) {\n          disctinctGenres.push(genre);\n        }\n      });\n    }), result.data.allBooks.forEach(function (book) {\n      console.log(\"haloo vittu\", book.genres, book.genres.includes(genreToShow));\n\n      if (book.genres.includes(genreToShow)) {\n        booksToShow.push(book);\n      }\n    }), console.log(result.data.allBooks, disctinctGenres), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"author\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"published\")), genreToShow === \"all\" ? result.data.allBooks.map(function (b) {\n      return React.createElement(\"tr\", {\n        key: b.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, b.title), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, b.author.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, b.published));\n    }) : booksToShow.map(function (b) {\n      return React.createElement(\"tr\", {\n        key: b.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, b.title), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, b.author.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, b.published));\n    }))), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Filter books by genre:\"), React.createElement(\"button\", {\n      onClick: function onClick() {\n        return setGenreToShow(\"all\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"all\"), React.createElement(\"button\", {\n      onClick: function onClick() {\n        return setGenreToShow(\"all\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"your favorite\"), disctinctGenres.map(function (genre) {\n      return React.createElement(\"button\", {\n        key: genre,\n        onClick: function onClick() {\n          return setGenreToShow(genre);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, genre);\n    }));\n  })));\n};\n\nexport default Books;","map":{"version":3,"sources":["/home/aatu/programming/authors/library-frontend/src/components/Books.js"],"names":["React","useState","Query","gql","ALL_BOOKS","ME","Books","props","genreToShow","setGenreToShow","disctinctGenres","booksToShow","show","result","loading","console","log","data","allBooks","forEach","book","genres","genre","includes","push","map","b","title","author","name","published"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { Query } from \"react-apollo\"\nimport { gql } from \"apollo-boost\"\n\nconst ALL_BOOKS = gql`\n  {\n    allBooks {\n      title\n      published\n      genres\n      author {\n        name\n      }\n    }\n  }\n`\nconst ME = gql`\n  {\n    me {\n      username\n      favoriteGenre\n    }\n  }\n`\n\nconst Books = props => {\n  const [genreToShow, setGenreToShow] = useState(\"all\")\n  const disctinctGenres = []\n  const booksToShow = []\n\n  if (!props.show) {\n    return null\n  }\n\n  return (\n    <div>\n      <h2>Books</h2>\n      <Query query={ME}>\n        <Query query={ALL_BOOKS}>\n          {result => {\n            if (result.loading) {\n              return <div>loading...</div>\n            }\n            return (\n              <div>\n                {console.log(\"genrestoshow\", genreToShow)}\n                <table>\n                  {result.data.allBooks.forEach(book => {\n                    book.genres.forEach(genre => {\n                      if (!disctinctGenres.includes(genre)) {\n                        disctinctGenres.push(genre)\n                      }\n                    })\n                  })}\n                  {result.data.allBooks.forEach(book => {\n                    console.log(\n                      \"haloo vittu\",\n                      book.genres,\n                      book.genres.includes(genreToShow)\n                    )\n                    if (book.genres.includes(genreToShow)) {\n                      booksToShow.push(book)\n                    }\n                  })}\n                  {console.log(result.data.allBooks, disctinctGenres)}\n                  <tbody>\n                    <tr>\n                      <th>title</th>\n                      <th>author</th>\n                      <th>published</th>\n                    </tr>\n                    {genreToShow === \"all\"\n                      ? result.data.allBooks.map(b => (\n                          <tr key={b.title}>\n                            <td>{b.title}</td>\n                            <td>{b.author.name}</td>\n                            <td>{b.published}</td>\n                          </tr>\n                        ))\n                      : booksToShow.map(b => (\n                          <tr key={b.title}>\n                            <td>{b.title}</td>\n                            <td>{b.author.name}</td>\n                            <td>{b.published}</td>\n                          </tr>\n                        ))}\n                  </tbody>\n                </table>\n                <h3>Filter books by genre:</h3>\n                <button onClick={() => setGenreToShow(\"all\")}>all</button>\n                <button onClick={() => setGenreToShow(\"all\")}>\n                  your favorite\n                </button>\n                {disctinctGenres.map(genre => (\n                  <button key={genre} onClick={() => setGenreToShow(genre)}>\n                    {genre}\n                  </button>\n                ))}\n              </div>\n            )\n          }}\n        </Query>\n      </Query>\n    </div>\n  )\n}\n\nexport default Books\n"]},"metadata":{},"sourceType":"module"}