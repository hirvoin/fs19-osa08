{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/aatu/programming/authors/library-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/aatu/programming/authors/library-frontend/src/components/Books.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    allBooks {\\n      title\\n      published\\n      genres\\n      author {\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nvar ALL_BOOKS = gql(_templateObject());\n\nvar Books = function Books(props) {\n  if (!props.show) {\n    return null;\n  }\n\n  var disctinctGenres = [\"war\", \"crime\"];\n  var mockupBook = {\n    author: {\n      name: \"Aatu Hirvonen\"\n    },\n    genres: [\"crime\"],\n    published: 2019,\n    title: \"Wound Mystery\"\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, console.log(disctinctGenres.includes(mockupBook.genres.values()), mockupBook.genres.values()), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Books\"), React.createElement(Query, {\n    query: ALL_BOOKS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, function (result) {\n    if (result.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"loading...\");\n    }\n\n    return React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, console.log(result.data.allBooks, disctinctGenres), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"author\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"published\")), result.data.allBooks.map(function (a) {\n      return React.createElement(\"tr\", {\n        key: a.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, a.title), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, a.author.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, a.published));\n    })));\n  }));\n};\n\nexport default Books;","map":{"version":3,"sources":["/home/aatu/programming/authors/library-frontend/src/components/Books.js"],"names":["React","Query","gql","ALL_BOOKS","Books","props","show","disctinctGenres","mockupBook","author","name","genres","published","title","console","log","includes","values","result","loading","data","allBooks","map","a"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,IAAMC,SAAS,GAAGD,GAAH,mBAAf;;AAYA,IAAME,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACrB,MAAI,CAACA,KAAK,CAACC,IAAX,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,MAAMC,eAAe,GAAG,CAAC,KAAD,EAAQ,OAAR,CAAxB;AACA,MAAMC,UAAU,GAAG;AACjBC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADS;AAEjBC,IAAAA,MAAM,EAAE,CAAC,OAAD,CAFS;AAGjBC,IAAAA,SAAS,EAAE,IAHM;AAIjBC,IAAAA,KAAK,EAAE;AAJU,GAAnB;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,OAAO,CAACC,GAAR,CACCR,eAAe,CAACS,QAAhB,CAAyBR,UAAU,CAACG,MAAX,CAAkBM,MAAlB,EAAzB,CADD,EAECT,UAAU,CAACG,MAAX,CAAkBM,MAAlB,EAFD,CADH,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,EAOE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEd,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAAAe,MAAM,EAAI;AACT,QAAIA,MAAM,CAACC,OAAX,EAAoB;AAClB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,OAAO,CAACC,GAAR,CAAYG,MAAM,CAACE,IAAP,CAAYC,QAAxB,EAAkCd,eAAlC,CADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,CADF,EAMGW,MAAM,CAACE,IAAP,CAAYC,QAAZ,CAAqBC,GAArB,CAAyB,UAAAC,CAAC;AAAA,aACzB;AAAI,QAAA,GAAG,EAAEA,CAAC,CAACV,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKU,CAAC,CAACV,KAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKU,CAAC,CAACd,MAAF,CAASC,IAAd,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKa,CAAC,CAACX,SAAP,CAHF,CADyB;AAAA,KAA1B,CANH,CAFF,CADF;AAmBD,GAxBH,CAPF,CADF;AAoCD,CAjDD;;AAmDA,eAAeR,KAAf","sourcesContent":["import React from \"react\"\nimport { Query } from \"react-apollo\"\nimport { gql } from \"apollo-boost\"\n\nconst ALL_BOOKS = gql`\n  {\n    allBooks {\n      title\n      published\n      genres\n      author {\n        name\n      }\n    }\n  }\n`\nconst Books = props => {\n  if (!props.show) {\n    return null\n  }\n\n  const disctinctGenres = [\"war\", \"crime\"]\n  const mockupBook = {\n    author: { name: \"Aatu Hirvonen\" },\n    genres: [\"crime\"],\n    published: 2019,\n    title: \"Wound Mystery\"\n  }\n\n  return (\n    <div>\n      {console.log(\n        disctinctGenres.includes(mockupBook.genres.values()),\n        mockupBook.genres.values()\n      )}\n\n      <h2>Books</h2>\n      <Query query={ALL_BOOKS}>\n        {result => {\n          if (result.loading) {\n            return <div>loading...</div>\n          }\n          return (\n            <table>\n              {console.log(result.data.allBooks, disctinctGenres)}\n              <tbody>\n                <tr>\n                  <th>title</th>\n                  <th>author</th>\n                  <th>published</th>\n                </tr>\n                {result.data.allBooks.map(a => (\n                  <tr key={a.title}>\n                    <td>{a.title}</td>\n                    <td>{a.author.name}</td>\n                    <td>{a.published}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )\n        }}\n      </Query>\n    </div>\n  )\n}\n\nexport default Books\n"]},"metadata":{},"sourceType":"module"}